. craving cause suffering
    .craving for approval to aquire happiness is a delusion and not the reality. 

. happiness must be earn. (cause and effect) 
    . right thought to promote love, compassion, honesty and eliminate ill-will. 
    . right action: thought alone is like a pretty flower without sense and fruit.

. HOW method: midfulness, constance effort to reach happiness: end suffering by end craving and earn your salvation by right thought and action

--------------------------------------------------------------------------

~. july 10-11-12-13 back packing
~. parakett idea: a trypod with remote. a keyboard of there own sound
~. i want to be a blues student.
~. build a play ground for parakeet. how to engage with your paraket. time. 
~. foreman  run -e .env,test.env python manage.py test --failfast
~. lsof -i :8000
~. http://stackoverflow.com/questions/13976022/is-there-a-way-to-highlight-all-the-special-accent-characters-in-sublime-text-or
----------------------------------------------------------------------------
source lu/venv/bin/activate
cd lu/kt_heroku
foreman start


----------------------------------------------------------------------------
SELECT pid, pg_terminate_backend(pid) 
FROM pg_stat_activity 
WHERE datname = current_database() AND pid <> pg_backend_pid();

----------------------------------------------------------------------------
(pwd:static_resource/js) 


node lib/r.js -o name=app/sale/sale_entry out=app/sale/sale_entry__min__.js baseUrl=. paths.jquery=empty: paths.jquery_ui=empty: paths.jquery_block_ui=empty: paths.bootstrap=empty: 

node lib/r.js -o name=app/product/product_entry out=app/product/product_entry__min__.js baseUrl=. paths.jquery=empty: paths.jquery_ui=empty: paths.jquery_block_ui=empty: paths.bootstrap=empty: 

----------------------------------------------------------------------------
TEMPLATE




KNOWN ISSUE
-----------
. receipt pusher: offline product is created due to disconnected internet. when the internet back on, we ready to push receipt. Receipt pusher will sync receipt, clean up sale data and offline created sp then ask master to recreate these sp. assume couch work but postgre does not. this will cause new sp to be stuck on couch untill the next push.
    
UPGRADE FEATURE
---------------
. deal
. store_product info should be push right away if internet is available. if not it can wait when we upload sale data.
    . if we mark store_product that is not assoc on the server, we can push them right away after sale so that other register can be updated
.manual discount: 
    . as oppose to deal discount
    . always calculate into $ amount
    . we need 1 more column if this feature is turned on: manual discount column
.update approve product in couch to contain more multiple suggestion info: price, crv, tax, name. implement not only insert, but update approve product

TO REMEMBER
-----------


~. res = self.app.post(url='sale_report/get_report',{'from_date':from_date_str,'to_date':to_date_str},user=user)

~. javascript closure for creating dynamic event handling in a creating a html table with loop
        for(var i = 0;i<prod_sku_assoc_set.length;i++){
            td = tr.insertCell(-1);
            td.innerHTML = _helper_is_sku_removable(cur_prod_sku_assoc) ? 'remove' : '';

            (function(v){
                td.addEventListener('click',function(){
                    remove_sku_handler(v);
                });
            }) (cur_prod_sku_assoc)
        }
REALIZATION
-----------
~. kit: in couch and pouch, sp contain breakdown_assoc_lst {breakdown_id,qty}. when server response sp json, we sp also have breakdown_assoc_lst{breakdown(recursive serialize sp here),qty}
~. make sure receipt in couch is not getting sync down again: magically did not get push down
~. encourage user to scan all data first, that way, when the internet is down, the data is already located offline for them. 
~. no approve_product on couch = fast loading, simplify project, less code to maintain. only 1 place to lookup for approve_product and that is master.
~. cloudant only differ in the way they handle _security. however, we don't test if a user can successfully sync from couchdb server. for now, we assume this step. so we don't need to test security feature, we will hand test these.
~. good result: after push sale data up, the receipt and locally create sp is removed correctly. 
~. pouch store db contain different document type: store_product, receipt,tax. index search make sure we can narrow down the doc type
. we need un_approve_override: these product will not have a regular sku: such as lt1, pc2 ...
~. after intialization: insert product lst that is_approve_override = true and run the script to add them to couch, we don't need to update or insert with is_approve_override = true. but if we do, we need to also add them to couch
~. don't let small un-important stand in your big task. task should be done in an order of important. renaming, code clean up are just clean up. if we can wait, do it later
~. if we over breakup code into smaller file that should be in one file, we end up write smaller test that should be only 1 test. 
~. test naming and structure: 
    ~.folder/package/module name: can be anything. 
    ~.file name: end with _test
    ~. class name: anything
    ~. method name: end with _test
~. we need to use a sku_str to id the old product to associate with a store. this is create old_store_product. Also, when 3 piece of info: (sku + product + store) come together, we complete the picture of product and sku approval. 
~. sku.is_approved need to be removed. approval is based on prod_sku_assoc not by sku itself. prod_sku_assoc approval should by fully dynamic. product is approved is also dynamic and is true if there is one approved prod_sku_assoc.
~. ["qty", "product", "regular price", "deal discount","discount price","crv", "tax", "line total", "X"]
~. initializer: i don't know how to shorten it yet: how about creator
~. should a module go find its input or let the input be supplied?
    ~. if the input is always the same, then it is part of this process
    ~. if the input could be many things, let the user of this module supply this input so it can be reuse.
~. displaying scan method naming
    .price naming
        . discount_price:       a price after the sum of all kind of discount: manual_discount, auto_deal_discount ...
        . out_the_door_price:   final_price + crv + tax
        . line_total:           out_the_door_price * qty
    .tax naming
        . with tax concern, tax only apply to final_price -> get_tax
 ~. don't call inline discount anymore.
    ~. use discount because we don't need to differentiate inline discount vs independent discount concept. 
    ~. Independent discount is solved with return of non-product.
~. deal is solved with deal discount, a type of "inline discount" in stead of return_non_product to lower the tax paying
    ~. customer don't care, they pay the same
    ~. inline deal discount reduce the price and reduce the tax collecting and reducing the tax paying
~. ps vs ds
    ~. ds dynamically join store_product to contain the fresh update info. 
    ~. deal change (ps:ds) ratio
        ~ (ps:ds) = (1:1) no deal
        ~ (ps:ds) = (1:n) deal
        ~ (ps:ds) = (n:1) ps is not compressed -> ERROR
~. who care about grammar when distinction is not matter. its there is not a concept of app vs apps, then go ahead use singular form
~. work is only part of life, which is a bigger picture. what is it mean to work?
~. everytime i try to get to store_product_util i like to go to lib not app. because 
~. keep searching for the easiest way to develop app. get good. not just get do able. 
~. is store_product_util belong to an app, not lib. store product is an app
~. spec is good to use in test/software development terminology. use spec!
~. employee cheat does not measure by void click, but by ratio. we can collect void click as well, just in case. 

~. ds computer only compute based on provided input. dont make the job of computer go find input and limit what input we can put in the 
~. if you about to kill a lot of code as an alternative eaiser. whatout for comfort brain seeking. Engage in changelenge activity. The sotification of live. 


-------------------
QUESTION - LEARNING
x. sp_couch_inserter use sp_document, but sp_couch_getter use a generic dictionary. i want these to be the same data: go through the same constructor for validation logic. Extra Info: look at python code not javascript code. 
x. cloudant replicator database
x. django-compressor
x. if we call async with only 1 method, can we by pass async?
x. pouch.changes.since
x. why link inside form can not be direct to correct url?
x. understand require.js : up front dependency list vs lazy loading
x. Agile and extreme development
x. 


------------
MAINTAINANCE
. where there is 2 product that keep saying they are changed.
. what do you do with old rev
. find out there is about 8 db change every refresh. why? there should be zero change and go the hell on. find out if we can optimize the speed here. 
x. pay attention to what couch db is doing with approved_product db
x client = store. we should rename this. get_client_name -> get_store_account_name. even better: get rit of user_prefix. 
x. test ui code with selenium: (sale.js)
x. ds_2_ui take only html table. it should also take in button to refresh text. basically search for all doc.getElementById and see if we can modular the code.
~. store_product search by sku need to narrow down to store_product document type. but currently, idb does not allow array key path + multiEntry
~. product should have things like: suggested name (approved name/temp_name),list of price,crv???,is_taxable
~. merge relization
    ~. if owner are too lazy to setup store_product upfront and these product does not meet approval criteria, he miss the chance to assoc them offline. he will create new product with same sku. admin have to merge different product with same name, same sku
    ~. Lets say this product have 2 real sku. there will be eventually 2 approved product with the same name and different sku. we then merge them. 

x. approve prod_sku_assoc required product must be approved in the first place
x. why do we need local store_db_name to have prefixed? it supposed to be 100% for the computer to processed. not user.
x. move receipt into by_sequence (store_os): receipt os have increment = true. how is it in by_sequence? is this gona be a problem?
x. django -> create new product -> cancel -> error
x. btn -> button
x. store_product_inserter
x. change d_type from prod_bus_assoc into store_product (offline product in pouch and couch)
x. get_tax.js -> tax_getter.js
x. can we have update_tax_cm
x. cm it its owned app. same concept with template for all app. 


x. how to secure client couch user account
x. continue test the scan/sale. repeated item, deal ...
x. add product from another store failed. 
x. replace requests library to couchdb-python
x. validate django transaction for master and couch is correct
x. move master user name and password out of cvs
x. define liqUser app

x. update all spec to use init_db code
x. js lib to prompt an integer. use this code on share sku breaker and change qty of displaying scan
x. implement Pending_scan feature: save_to_db(index_db)
x. need to test sale entry point
x. i did not test displaying_scan_2_table code that hook up hook up ds_modifier to ui
x. enforce pending scan qty to not be zero as a db constrain
x. key for pending scan  is null or wrong?
x. displaying_scan_2_table -> displaying_scan_lst_2_table
x. displaying scan modifier:
    . pending_scan.save_to_db(index_db)
    . instruction.execute_on(pending_scan)
x. record -> receipt
x. DEFAULT_TEMPLATE_FORM: what to do about this?
x. oganize store_product app: view,test,cm
x. {% load staticfiles %} why do i need this on my base.html, since i don't believe in my project, i use static template tag, which build dynamic url based on STATICFILES_STORAGE. True?

CURRENT TASKS
-------------
. couch doc validation
    . data type?
    . unexpected fields
    . receipt_ln: non product name can exist together with sp validation 
. verify transaction is valid in sale processor
. process sale data -> create_old_store_product have to create Product one by one. see if you can optimize this
.user_util : remove this guy
.insert sku cs / test insert sku
.delete sku cm / test delete sku
.when update receipt (collected amount, we need to make sure the rev does not screw stuff up)
 . test assoc_old_store_product_ui to have response code 200. We don't need to test 2 cases: approved and non approved. we dont need to test the restuls. these will be unit test.
. test that assoc product from one store to other store will include approved sku. by design, this should work. but test it anway i guess.

. define receipt pusher: may be have another name for it. what is it do? should it clean up offline and ask server to process data? should i break it up to sync receipt, clean up, and ask server?
. pending scan is part of scanner. scanner is a module to record pending scan. before it is sale_record.
. i like the word sale_record. we should use this word.
. receipt_ln structure: we can store it flat out (no need some store_product info: d_type,price,sku_lst)
    sp_doc_id
    pid
    name
    non_product_name

    qty
    price
    discount
    crv
    is_taxable
.util.couch -> couch
.store.store_inserter folder should be deleted
. sku.is_approved, unit.is_approved
.pending_scan_inserter should not take a pending scan as param. break this out to multiple param
.store.save() by_pass_cm ?
.store_product_getter: generic_search take an index name. make sure all these index name have atleast one colummn: d_type = 'store_product'
. using GET instead of POST: refresh sale shortcut table + sale report by day
. after sync ap product, ui is unblock, but couchdb console still spining for another 5 - 7 second.
. take a look at setup optimization if there is any thing we can do a better job here.
. store_inserter_test: we can probably turn this off. but if we need it, we can probably setup the env specifically for this test. how about the rest of the test?
. how can we test since our local env is couchdb and production if bigcouch is this complicate anything?
. we can kill some of the environment variable (couchdb_master_user_name,password,url)  and just derived on cloudant_url which is auto set.
. when pushing receipt to server, we need to handle data that is enter wrong such as price, crv is out of range: negative or over max value. how can we make sure good data is still saved and not roll back the whole thing and loss them


. _doc_id_rev of receipt and store product should be change to _rev
. why there is a store id on sp in couch side? kill it
. serialize_product_from_id(product_id,store_id,is_include_other_store) revisit is_include_other_store. it does not work. may be i need to implement this with python and not with django orm filter.
. why tax_rate is not included in the sale context param
. sp_util.get_sp_json_from_product_json: can i make it to be uniform with the client code: put it in product app, and uniform method naming
. max_digits=7, decimal_places=2
------------------------------------------------------------------------------------------------------------------
PAGE LOADING USER EXPERIENCE
    . block ui when, and report require.js time out

    . need to provide a loading for all area:
        . load time out for module, including jquery. This time, we can't block ui. but must display error message when time out for loading
        . when jquery is loaded. we need to block ui for all asyc operation. 
            . scan for a product that is not found, create sp online, sync sp offline, rescan ... need to block ui for this

------------------------------------------------------------------------------------------------------------------
UPGRADE FEATURE
. how to approve name: we need a tool. to sort out all products that is mostly used among all store. 
. print receipt
. discount that attach to item
. offline name search
. offline receipt lookup
. up and down key to select product (for non touch screen)
. kit is a product that is the exact grouping with other products. use this relation to track sale record, inventory,cost,crv
. until we have a 1 page app, changing info in one page such as tax, deal, ... should affect other pages without refresh. we need a global varable between page and that is session. refresh this ui on refocus or tab switching using session global var
. shortcut setup inside sale page ( a step closer to one page web app)
. type of business: convenient store. data collecting
. zip code: geographic corporation
. base on profit best selling product 
. clean out dead inventory
. more or less info in sp prompt
. heroku log: how to warn user about usage. how to charge user on extra full db loading.
. void log
. search pagination
. remove all alert
. export to excel
. profit page
------------------------------------------------------------------------------------------------------------------
SKILL IMPROVEMENT
. continuous test->build->deploy
. inline html inside javascript: disadvantage: can't write normal html since we have to wrap it inside quote
. angular
---------------------------------------------------------------
TEST
couch_acl_validator_test: client have write permission that follow these 4 rules. is big couch follow the same syntax as couchdb?
    . client can insert receipt. 
    . client can not insert non-receipt
    . client can not update
    . client can not delete
. test select correct line
    . test sale edit
    . test sale short cut parent, child
    . test shortcut setup
    . test sp creator prodStore_prodSku_1_0, prodStore_prodSku_0_0
. mix match test: insert/update for client
. delete sku test: can not delete sku when it belong to another store 
. test couch acl, should we move this test into other app? i believe it would be receipt? since we can only insert receipt
. product model test
. store inserter test
. receipt_document_validator_test
. sku scan not found handler spec: there is a spy on old window.confirm and now we change it. make sure test work

---------------------
. hold: show master detail 
. receipt: show master detail, updown key
. payment type
    . report of pt
    . change pt after the fact
. get group take a long time: migh be i don't need to get all item inside the group. let it load when user click on group.



---
duplicate item 

